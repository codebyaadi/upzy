name: "upzy-stack"

services:
  # PostgreSQL Database with TimescaleDB Extension
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: timescaledb
    environment:
      - POSTGRES_DB=upzy_database
      - POSTGRES_USER=upzy
      - POSTGRES_PASSWORD=upzypass
    ports:
      # Maps host port 5432 to container port 5432 for direct database access.
      - "5432:5432"
    volumes:
      # Persists PostgreSQL data using a named volume.
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - upzy_net
    healthcheck:
      # Checks if the database is ready to accept connections before other services start.
      test: ["CMD-SHELL", "pg_isready -U upzy -d upzy_database"]
      interval: 5s
      timeout: 5s
      retries: 5

  # pgAdmin: Web UI for PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_web
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@upzy.com
      - PGADMIN_DEFAULT_PASSWORD=admin_password
    ports:
      # Maps host port 5050 to the container's web server on port 80.
      - "5050:80"
    volumes:
      # Persists pgAdmin user settings and server configurations.
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - upzy_net
    depends_on:
      timescaledb:
        condition: service_healthy # Ensures pgAdmin starts only after the database is healthy.

  # Redis Stack: In-Memory Data Store & More
  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6379:6379" # Standard Redis server port
      - "8001:8001" # RedisInsight UI port
    volumes:
      # Persists Redis data.
      - redis_data:/data
    networks:
      - upzy_net
    healthcheck:
      # Simple check to see if the Redis server is responding.
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  # Mailpit: Email Testing Tool
  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    ports:
      - "1025:1025"  # SMTP server port for your app to connect to.
      - "8025:8025"  # Web UI port.
    networks:
      - upzy_net

# Volumes & Networks
volumes:
  timescaledb_data:
  pgadmin_data:
  redis_data:

# Defines a custom bridge network for the services. This provides better
# isolation and allows services to resolve each other by their container name.
networks:
  upzy_net:
    name: upzy_net
    driver: bridge
